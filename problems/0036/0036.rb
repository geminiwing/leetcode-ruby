# 0036. Valid Sudoku - Medium

def is_valid_sudoku(board)
  check_rows(board) && check_cols(board) && check_3x3(board)
end

def check_rows(board)
  board.each do |row|
    return false if !check_uniq(row)
  end

  true
end

def check_cols(board)
  (0..8).each do |i|
    col = board.map{|row| row[i]}
    return false if !check_uniq(col)
  end

  true
end

def check_3x3(board)
  [0, 3, 6].each do |y|
    [0, 3, 6].each do |x|
      nums = board[y][x..x+2] +
             board[y+1][x..x+2] +
             board[y+2][x..x+2]
      return false if !check_uniq(nums)
    end
  end

  true
end

def check_uniq(nums)
  arr = nums.dup
  arr.delete('.')
  arr.size == arr.uniq.size
end

# Test

board = [["5","3",".",".","7",".",".",".","."],["6",".",".","1","9","5",".",".","."],[".","9","8",".",".",".",".","6","."],["8",".",".",".","6",".",".",".","3"],["4",".",".","8",".","3",".",".","1"],["7",".",".",".","2",".",".",".","6"],[".","6",".",".",".",".","2","8","."],[".",".",".","4","1","9",".",".","5"],[".",".",".",".","8",".",".","7","9"]]
puts is_valid_sudoku(board) # true

board = [["8","3",".",".","7",".",".",".","."],["6",".",".","1","9","5",".",".","."],[".","9","8",".",".",".",".","6","."],["8",".",".",".","6",".",".",".","3"],["4",".",".","8",".","3",".",".","1"],["7",".",".",".","2",".",".",".","6"],[".","6",".",".",".",".","2","8","."],[".",".",".","4","1","9",".",".","5"],[".",".",".",".","8",".",".","7","9"]]
puts is_valid_sudoku(board) # false

board = [[".",".",".",".","5",".",".","1","."],[".","4",".","3",".",".",".",".","."],[".",".",".",".",".","3",".",".","1"],["8",".",".",".",".",".",".","2","."],[".",".","2",".","7",".",".",".","."],[".","1","5",".",".",".",".",".","."],[".",".",".",".",".","2",".",".","."],[".","2",".","9",".",".",".",".","."],[".",".","4",".",".",".",".",".","."]]
puts is_valid_sudoku(board) # false
